{"remainingRequest":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\src\\views\\Home.vue","mtime":1616440094971},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Owner\\source\\repos\\TaskTracker-Vuejs\\TaskTracker-Vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"C:/Users/Owner/source/repos/TaskTracker-Vuejs/TaskTracker-Vuejs/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/Owner/source/repos/TaskTracker-Vuejs/TaskTracker-Vuejs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Owner/source/repos/TaskTracker-Vuejs/TaskTracker-Vuejs/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Tasks from \"../components/Tasks\";\nimport AddTask from \"../components/AddTask\";\nexport default {\n  name: 'Home',\n  props: {\n    showAddTask: Boolean // Props passed from routerview. Identifying if new task is to be shown.\n\n  },\n  components: {\n    Tasks: Tasks,\n    AddTask: AddTask\n  },\n  data: function data() {\n    return {\n      tasks: []\n    };\n  },\n  methods: {\n    addTask: function () {\n      var _addTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(task) {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('api/tasks', {\n                  method: 'POST',\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  body: JSON.stringify(task)\n                });\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                this.tasks = [].concat(_toConsumableArray(this.tasks), [data]);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function addTask(_x) {\n        return _addTask.apply(this, arguments);\n      }\n\n      return addTask;\n    }(),\n    deleteTask: function () {\n      var _deleteTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!confirm('Are you sure?')) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return fetch(\"api/tasks/\".concat(id), {\n                  method: 'DELETE'\n                });\n\n              case 3:\n                res = _context2.sent;\n                res.status === 200 ? this.tasks = this.tasks.filter(function (task) {\n                  return task.id !== id;\n                }) : alert('Error deleting task!');\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function deleteTask(_x2) {\n        return _deleteTask.apply(this, arguments);\n      }\n\n      return deleteTask;\n    }(),\n    toggleReminder: function () {\n      var _toggleReminder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(id) {\n        var taskToToggle, updTask, res, data;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.fetchTask(id);\n\n              case 2:\n                taskToToggle = _context3.sent;\n                updTask = _objectSpread(_objectSpread({}, taskToToggle), {}, {\n                  reminder: !taskToToggle.reminder\n                });\n                _context3.next = 6;\n                return fetch(\"api/tasks/\".concat(id), {\n                  method: 'PUT',\n                  headers: {\n                    'Content-type': 'application/json'\n                  },\n                  body: JSON.stringify(updTask)\n                });\n\n              case 6:\n                res = _context3.sent;\n                _context3.next = 9;\n                return res.json();\n\n              case 9:\n                data = _context3.sent;\n                this.tasks = this.tasks.map(function (task) {\n                  return task.id === id ? _objectSpread(_objectSpread({}, task), {}, {\n                    reminder: data.reminder\n                  }) : task;\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function toggleReminder(_x3) {\n        return _toggleReminder.apply(this, arguments);\n      }\n\n      return toggleReminder;\n    }(),\n    fetchTasks: function () {\n      var _fetchTasks = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return fetch('api/tasks');\n\n              case 2:\n                res = _context4.sent;\n                _context4.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context4.sent;\n                return _context4.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function fetchTasks() {\n        return _fetchTasks.apply(this, arguments);\n      }\n\n      return fetchTasks;\n    }(),\n    fetchTask: function () {\n      var _fetchTask = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(id) {\n        var res, data;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return fetch(\"api/tasks/\".concat(id));\n\n              case 2:\n                res = _context5.sent;\n                _context5.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context5.sent;\n                return _context5.abrupt(\"return\", data);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function fetchTask(_x4) {\n        return _fetchTask.apply(this, arguments);\n      }\n\n      return fetchTask;\n    }()\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee6() {\n      return regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.fetchTasks();\n\n            case 2:\n              this.tasks = _context6.sent;\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }()\n};",{"version":3,"sources":["Home.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div>\r\n        <div v-show=\"showAddTask\">\r\n            <AddTask @add-task=\"addTask\" />\r\n        </div>\r\n        <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Tasks from '../components/Tasks'\r\n    import AddTask from '../components/AddTask'\r\n\r\n    export default {\r\n        name: 'Home',\r\n        props: { \r\n            showAddTask: Boolean, // Props passed from routerview. Identifying if new task is to be shown.\r\n        },\r\n        components: {\r\n            Tasks,\r\n            AddTask,\r\n        },\r\n        data() {\r\n            return {\r\n                tasks: []\r\n            }\r\n        },\r\n        methods: {\r\n            async addTask(task) {\r\n                const res = await fetch('api/tasks', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(task)\r\n                })\r\n\r\n                const data = await res.json()\r\n\r\n                this.tasks = [...this.tasks, data]\r\n            },\r\n            async deleteTask(id) {\r\n                if (confirm('Are you sure?')) {\r\n                    const res = await fetch(`api/tasks/${id}`, {\r\n                        method: 'DELETE'\r\n                    })\r\n\r\n                    res.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id !== id)) : alert('Error deleting task!')\r\n                }\r\n            },\r\n            async toggleReminder(id) {\r\n                const taskToToggle = await this.fetchTask(id)\r\n                const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n                const res = await fetch(`api/tasks/${id}`, {\r\n                    method: 'PUT',\r\n                    headers: {\r\n                        'Content-type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(updTask)\r\n                })\r\n\r\n                const data = await res.json()\r\n\r\n                this.tasks = this.tasks.map((task) =>\r\n                    task.id === id ? { ...task, reminder: data.reminder } : task\r\n                )\r\n            },\r\n            async fetchTasks() {\r\n                const res = await fetch('api/tasks')\r\n                const data = await res.json()\r\n                return data\r\n            },\r\n            async fetchTask(id) {\r\n                const res = await fetch(`api/tasks/${id}`)\r\n                const data = await res.json()\r\n                return data\r\n            }\r\n        },\r\n        async created() {\r\n            this.tasks = await this.fetchTasks()\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n</style>"],"sourceRoot":"src/views"}]}